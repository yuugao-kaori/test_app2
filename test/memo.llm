あなたはフルスタックエンジニアです。
既存のReactのコードに、下記の機能を追加して下さい。

================




あなたはフルスタックエンジニアです。
このウェブアプリに、ログイン機能を実装しようと考えています。
Expressを利用してAPIを開発してください。
分からない情報は質問して下さい。正確さを最優先に、一歩一歩考えながら取り組んで下さい。

①PGモジュールを使用して接続する。
※接続情報は「../../../../.env」を読み取る。
====.envの構造====
POSTGRES_NAME=db
POSTGRES_USER=myuser
POSTGRES_PASSWORD=mypassword
POSTGRES_DB=mydatabase
====接続に用いるコード====
  const client = new Client({
    user: POSTGRES_USER,
    host: POSTGRES_NAME,
    database: POSTGRES_DB,
    password: POSTGRES_PASSWORD,
    port: 5432,
  });
②受け付けるエンドポイントは、/api/user/login
入力される情報は、user_id,user_password
③要件は
user_passwordをハッシュ化する
	- user_saltのソルトを読み込む
	- アルゴリズムはargon2を使用する
	- 30000回ストレッチングを行う
- userテーブルのuser_id行のuser_password列と合致するかを確認する
④合致していたらHTTP200を返却する

- express-sessionを使用してセッション管理を実施する
	- メモリリークの対策としてValkeyにデータを保管する
	- ログインからログアウトまで再ログインは求めないようにする



①画面の右上にログインボタンを設置する
②ログインボタンを押すとユーザ名とパスワードを入力するポップアップが表示される
という二つの機能をまず、実装して下さい。
③入力すると、API（192.168.1.148:23000/api/user/login）にユーザ名とパスワードを送信する
④



Expressを利用したAPIを実装して下さい。

要件は、



あなたはフロントエンドエンジニアです。
Nodejsでセッション管理を行うコードを書いて下さい。
フロントエンドはReact(ポート3000)、バックエンドはExpress(ポート5000)、セッションストアはValkey(ポート9000)。
ログイン情報はlocalhost:3000/api/user/loginに送信されます。
セッションはログインからログアウトまで保持してください。

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

あなたはフロントエンドエンジニアです。
Nodejsでセッション管理を行うコードを書いて下さい。
フロントエンドはReact(ポート3000)、バックエンドはExpress(ポート5000)を使用して下さい。
1. セッションについては、express-sessionモジュールを利用して下さい。
2. ログイン情報はlocalhost:3000/api/user/loginに送信されます。
3. セッション情報は30分保持され、30分毎に新しいセッションIDが生成されます。
4. Remember Me機能がデフォルトで有効化されています。
5. セッションはログインからログアウトまで保持してください。
6. テスト実装のため、USER_ID、USER_PASSWORDはコード内に定義されます。
7. テスト実装のため、セッションはインメモリを利用します(外部のストアは使用しません)
8. フロントエンドのログイン実装は現在下記のようになっています。
----------------------
          </button>

          {/* ログインポップアップ */}
          {showLogin && (
            <div className="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50">
              <div className="bg-white p-6 rounded shadow-lg w-1/3">
                <h2 className="text-lg font-bold mb-4">ログイン</h2>
                <form>
                  <div className="mb-4">
                    <label className="block text-gray-700">ユーザ名</label>
                    <input type="text" className="w-full p-2 border border-gray-300 rounded" />
                  </div>
                  <div className="mb-4">
                    <label className="block text-gray-700">パスワード</label>
                    <input type="password" className="w-full p-2 border border-gray-300 rounded" />
                  </div>
                  <div className="flex justify-end">
                    <button type="button" className="bg-red-500 text-white p-2 rounded mr-2" onClick={toggleLoginPopup}>
                      キャンセル
                    </button>
                    <button type="submit" className="bg-blue-500 text-white p-2 rounded">
                      ログイン
                    </button>