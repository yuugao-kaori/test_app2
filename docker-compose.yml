services:
  app:
    container_name: app
    image: node:22-alpine
    working_dir: /usr/src/app
    volumes:
      - ./app:/usr/src/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "23000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "25432:5432"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "25050:80"
    depends_on:
      - db
  valkey:
    image: valkey/valkey:8.0
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - VALKEY_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '26379:6379'

volumes:
  db_data:

# エスケープ：このdocker-compose.ymlはアプリケーションコンテナ、データベースコンテナ、そしてpgAdminコンテナを定義しています。appサービスはNode.jsのモジュールをインストールし、npm run devで開発環境を起動します。dbサービスはPostgreSQLのデータベースを提供し、pgadminサービスはデータベースの管理ツールとして動作します。ポートフォワーディングと環境変数によって通信を管理しています。
